{"version":3,"sources":["pages/HomePage.js","components/MatchesList.js","components/EntriesList.js","components/SummonerBasicInfo.js","pages/SummonerPage.js","components/MatchBasicInfo.js","components/BanList.js","components/ParticipantList.js","components/Overview.js","components/AdvancedStats.js","components/MatchDetail.js","pages/MatchDetailPage.js","pages/NotFoundPage.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","props","refresh","e","preventDefault","window","location","reload","onChangeSearch","bind","onSearch","state","summonerName","error","this","setState","target","value","history","fetch","then","res","json","result","push","className","onClick","style","marginRight","width","src","marginLeft","to","marginTop","marginBottom","alt","placeholder","type","onChange","Component","MatchesList","matches","basicInfo","map","match","key","height","name","gameId","champions","keys","champion","gameDuration","win","role","lane","kills","deaths","assists","margin","toFixed","totalDamageDealtToChampions","totalMinionsKilled","queues","find","q","queueId","queue","description","slice","toString","Moment","timestamp","fromNow","EntriesList","entries","entry","tier","queueType","rank","leaguePoints","wins","losses","SummonerBasicInfo","info","position","display","color","right","bottom","textAlign","borderRadius","padding","fontSize","background","summonerLevel","profileIconId","lastPlayed","SummonerPage","loadMoreMatches","summonerInfo","leagueEntries","index","params","matchOveralls","prevProps","prevState","concat","length","MatchBasicInfo","summonerBasicInfo","participants","p","stats","paddingTop","gameCreation","format","BanList","bans","class","b","pickTurn","championId","onError","i","ParticipantList","largestDamageDealtToChampions","teamId","Object","summoner","s","spell1Id","spell2Id","allRunes","r","perkPrimaryStyle","rr","rrr","perk0","icon","perkSubStyle","item0","item1","item2","item3","item4","item5","toLocaleString","TeamInfo","teams","participantsTeam1","participantsTeam2","t","totalKills","totalDeaths","totalAssists","towerKills","inhibitorKills","dragonKills","riftHeraldKills","baronKills","totalGoldEarned","AdvancedStats","largestKillingSpree","largestMultiKill","physicalDamageDealtToChampions","magicDamageDealtToChampions","trueDamageDealtToChampions","totalDamageDealt","physicalDamageDealt","magicDamageDealt","trueDamageDealt","largestCriticalStrike","damageDealtToObjectives","damageDealtToTurrets","totalHeal","totalDamageTaken","physicalDamageTaken","magicalDamageTaken","trueDamageTaken","damageSelfMitigated","visionScore","wardsPlaced","wardsKilled","visionWardsBoughtInGame","goldEarned","goldSpent","neutralMinionsKilled","neutralMinionsKilledTeamJungle","neutralMinionsKilledEnemyJungle","turretKills","MatchDetail","data-toggle","href","id","Overview","MatchDetailPage","matchId","filter","NotFoundPage","App","path","component","exact","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.c416a9d1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class HomePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangeSearch = this.onChangeSearch.bind(this);\r\n    this.onSearch = this.onSearch.bind(this);\r\n    this.refresh = this.refresh.bind(this);\r\n\r\n    this.state = {\r\n      summonerName: \"\",\r\n      error: \"\",\r\n    };\r\n  }\r\n\r\n  onChangeSearch(e) {\r\n    this.setState({\r\n      summonerName: e.target.value,\r\n    });\r\n  }\r\n\r\n  onSearch() {\r\n    const { history } = this.props;\r\n\r\n    if (this.state.summonerName != \"\") {\r\n      fetch(\r\n        `https://localhost:44355/api/summoners/verify-by-name/${this.state.summonerName}`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          if (result === true) {\r\n            this.setState({\r\n              error: \"\",\r\n            });\r\n            history.push(`/summonerdetail/${this.state.summonerName}`);\r\n          } else {\r\n            this.setState({\r\n              error: \"Summoner name does not match any record!\",\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      this.setState({\r\n        error: \"Please enter a summoner name!\",\r\n      });\r\n    }\r\n  }\r\n\r\n  refresh = (e) => {\r\n    e.preventDefault();\r\n    window.location.reload(false);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <nav className=\"navbar navbar-expand-md bg-dark navbar-dark\">\r\n            <Link\r\n              className=\"nav-brand border-right border-secondary\"\r\n              onClick={this.refresh}\r\n            >\r\n              <img\r\n                style={{ marginRight: 14, width: 80 }}\r\n                src={\"/shurima_logo.png\"}\r\n              />\r\n            </Link>\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link h4 text-white\"\r\n                  onClick={this.refresh}\r\n                  style={{ marginLeft: 14 }}\r\n                >\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link h4 text-white\"\r\n                  to=\"/\"\r\n                  style={{ marginLeft: 14 }}\r\n                >\r\n                  About\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link h4 text-white\"\r\n                  to=\"/\"\r\n                  style={{ marginLeft: 14 }}\r\n                >\r\n                  Contact\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n        <div className=\"container\" style={{ marginTop: 200, marginBottom: 40 }}>\r\n          <img style={{ width: 800 }} src={\"/shurima.png\"} alt=\"\" />\r\n          <div\r\n            className=\"input-group border border-dark rounded\"\r\n            style={{\r\n              marginTop: 140,\r\n              marginBottom: 40,\r\n              width: 600,\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n            }}\r\n          >\r\n            <input\r\n              value={this.state.summonerName}\r\n              placeholder=\"Enter a summoner name...\"\r\n              type=\"text\"\r\n              className=\"form-control border-0\"\r\n              onChange={this.onChangeSearch}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button className=\"btn btn-light\" onClick={this.onSearch}>\r\n                <FaSearch />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {this.state.error !== \"\" ? (\r\n            <h4 className=\"text-warning\">{this.state.error}</h4>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"moment\";\r\nimport champions from \"../data/en_US/championFull.json\";\r\nimport queues from \"../data/en_US/queues.json\";\r\nimport { FaChartBar } from \"react-icons/fa\";\r\n\r\nconst MatchesList = ({ matches, basicInfo }) => (\r\n  <div\r\n    className=\"card shadow bg-dark\"\r\n    style={{ marginTop: 10, marginBottom: 10 }}\r\n  >\r\n    <div className=\"card-body text-center\">\r\n      <table className=\"card-text table table-dark table-striped small\">\r\n        <tbody>\r\n          {matches.map((match, key) => (\r\n            <tr>\r\n              <td>\r\n                <div className=\"row\" style={{ height: 50 }}>\r\n                  <div className=\"col-1\">\r\n                    <Link\r\n                      className=\"nav-link h4 text-warning\"\r\n                      to={`/matchdetail/${basicInfo.name}/${match.gameId}`}\r\n                    >\r\n                      <FaChartBar />\r\n                    </Link>\r\n                  </div>\r\n                  <div className=\"col-1\">\r\n                    <img\r\n                      src={\r\n                        \"/img/champion/\" +\r\n                        champions.keys[match.champion] +\r\n                        \".png\"\r\n                      }\r\n                      style={{ width: 50 }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col\">\r\n                    <div>\r\n                      {match.gameDuration < 300 ? (\r\n                        <h6 className=\"text-secondary\">Remake</h6>\r\n                      ) : match.win ? (\r\n                        <h6 className=\"text-primary\">Victory</h6>\r\n                      ) : (\r\n                        <h6 className=\"text-danger\">Defeat</h6>\r\n                      )}\r\n                      <p className=\"text-secondary\">\r\n                        {match.role === \"DUO_SUPPORT\" ? \"SUPPORT\" : match.lane}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col\">\r\n                    <div style={{ marginTop: 6 }}>\r\n                      <p style={{ marginBottom: 0 }}>\r\n                        {match.kills} / {match.deaths} / {match.assists}\r\n                      </p>\r\n                      <p className=\"text-secondary\" style={{ margin: 0 }}>\r\n                        {match.deaths > 0\r\n                          ? (\r\n                              (match.kills + match.assists) /\r\n                              match.deaths\r\n                            ).toFixed(2)\r\n                          : (match.kills + match.assists).toFixed(2)}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col\">\r\n                    <div style={{ marginTop: 12 }}>\r\n                      <p>\r\n                        {(\r\n                          match.totalDamageDealtToChampions /\r\n                          (match.gameDuration / 60)\r\n                        ).toFixed(2)}{\" \"}\r\n                        DMG/min\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col\">\r\n                    <div style={{ marginTop: 12 }}>\r\n                      <p>\r\n                        {(\r\n                          match.totalMinionsKilled /\r\n                          (match.gameDuration / 60)\r\n                        ).toFixed(2)}{\" \"}\r\n                        CS/min\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-3\">\r\n                    <div style={{ marginTop: 6 }}>\r\n                      <p style={{ marginBottom: 0 }}>\r\n                        {queues\r\n                          .find((q) => q.queueId === match.queue)\r\n                          .description.slice(0, -6)}\r\n                      </p>\r\n                      <p className=\"text-secondary\">\r\n                        {(match.gameDuration / 60).toFixed(0)}:\r\n                        {match.gameDuration % 60 < 10\r\n                          ? \"0\" + (match.gameDuration % 60).toString()\r\n                          : match.gameDuration % 60}\r\n                        <span style={{ marginLeft: 4, marginRight: 4 }}>\r\n                          &bull;\r\n                        </span>\r\n                        {Moment(match.timestamp).fromNow()}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default MatchesList;\r\n","import React from \"react\";\r\n\r\nconst EntriesList = ({ entries }) => (\r\n  <div\r\n    className=\"card shadow bg-dark\"\r\n    style={{\r\n      marginTop: 10,\r\n      marginBottom: 10,\r\n    }}\r\n  >\r\n    <div className=\"card-body text-center\">\r\n      <table className=\"card-text table table-dark table-striped\">\r\n        <tbody>\r\n          {entries === null ? (\r\n            <tr>\r\n              <td>\r\n                <p>Unranked</p>\r\n              </td>\r\n            </tr>\r\n          ) : (\r\n            entries.map((entry, key) => (\r\n              <tr>\r\n                <td>\r\n                  <div className=\"row\" style={{ height: 100 }}>\r\n                    <div className=\"col-3\">\r\n                      <img\r\n                        src={\"/ranked-emblems/Emblem_\" + entry.tier + \".png\"}\r\n                        style={{ width: 80 }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-9\" style={{ marginTop: 16 }}>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          {entry.queueType === \"RANKED_SOLO_5x5\" ? (\r\n                            <p>Ranked Solo/Duo</p>\r\n                          ) : entry.queueType === \"RANKED_FLEX_SR\" ? (\r\n                            <p>Ranked Flex</p>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                          <p>\r\n                            {entry.tier} {entry.rank}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-4\">\r\n                          <p>{entry.leaguePoints} LP</p>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                          <p>{entry.wins} W</p>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                          <p>{entry.losses} L</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default EntriesList;\r\n","import React from \"react\";\r\nimport Moment from \"moment\";\r\n\r\nconst SummonerBasicInfo = ({ info }) => (\r\n  <div\r\n    className=\"shadow bg-dark card\"\r\n    style={{\r\n      marginTop: 10,\r\n      marginBottom: 10,\r\n    }}\r\n  >\r\n    <div className=\"card-body text-center\">\r\n      <div className=\"row card-text\">\r\n        <div className=\"col-md-4\">\r\n          <div\r\n            style={{\r\n              position: \"relative\",\r\n              display: \"inline-block\",\r\n            }}\r\n          >\r\n            <span\r\n              className=\"badge\"\r\n              style={{\r\n                color: \"white\",\r\n                position: \"absolute\",\r\n                right: -20,\r\n                bottom: 0,\r\n                textAlign: \"center\",\r\n                borderRadius: 30,\r\n                padding: 10,\r\n                fontSize: 16,\r\n                background: \"#203354\",\r\n              }}\r\n            >\r\n              {info.summonerLevel}\r\n            </span>\r\n            <img\r\n              className=\"rounded-circle bg-warning\"\r\n              style={{ width: 120, padding: 4 }}\r\n              src={\"/img/profileicon/\" + info.profileIconId + \".png\"}\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-8\" style={{ marginTop: 14 }}>\r\n          <h2 className=\"text-white text-left\">{info.name}</h2>\r\n          <p className=\"text-secondary text-left\">\r\n            Last played: {Moment(info.lastPlayed).fromNow()}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default SummonerBasicInfo;\r\n","import React, { Component } from \"react\";\r\nimport MatchesList from \"../components/MatchesList\";\r\nimport EntriesList from \"../components/EntriesList\";\r\nimport BasicInfo from \"../components/SummonerBasicInfo\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class SummonerPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangeSearch = this.onChangeSearch.bind(this);\r\n    this.onSearch = this.onSearch.bind(this);\r\n\r\n    this.loadMoreMatches = this.loadMoreMatches.bind(this);\r\n\r\n    this.state = {\r\n      summonerName: \"\",\r\n      summonerInfo: [],\r\n      leagueEntries: [],\r\n      error: \"\",\r\n      index: 10,\r\n      matches: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { name } = this.props.match.params;\r\n\r\n    fetch(\r\n      `https://localhost:44355/api/summoners/by-name/${name}?index=${this.state.index}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        this.setState({\r\n          summonerInfo: result,\r\n          leagueEntries: result.leagueEntries,\r\n          matches: result.matchOveralls,\r\n        });\r\n      });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.index !== this.state.index) {\r\n      fetch(\r\n        `https://localhost:44355/api/summoners/by-name/${this.state.summonerInfo.name}?index=${this.state.index}`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          this.setState({\r\n            matches: this.state.matches.concat(result.matchOveralls),\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  loadMoreMatches() {\r\n    this.setState({\r\n      index: this.state.index + 10,\r\n    });\r\n  }\r\n\r\n  onChangeSearch(e) {\r\n    this.setState({\r\n      summonerName: e.target.value,\r\n    });\r\n  }\r\n\r\n  onSearch() {\r\n    const { history } = this.props;\r\n\r\n    if (this.state.summonerName !== \"\") {\r\n      fetch(\r\n        `https://localhost:44355/api/summoners/verify-by-name/${this.state.summonerName}`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          if (result === true) {\r\n            history.push(`/summonerDetail/${this.state.summonerName}`);\r\n            window.location.reload(false);\r\n          } else {\r\n            this.setState({\r\n              error: \"Summoner name does not match any record!\",\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      this.setState({\r\n        error: \"Please enter a summoner name!\",\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <nav className=\"navbar navbar-expand-md bg-dark navbar-dark\">\r\n            <Link className=\"nav-brand border-right border-secondary\" to=\"/\">\r\n              <img\r\n                style={{ marginRight: 14, width: 80 }}\r\n                src={\"/shurima_logo.png\"}\r\n                alt=\"\"\r\n              />\r\n            </Link>\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link h4 text-white\"\r\n                  to=\"/\"\r\n                  style={{ marginLeft: 14 }}\r\n                >\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link h4 text-white\"\r\n                  to=\"/\"\r\n                  style={{ marginLeft: 14 }}\r\n                >\r\n                  About\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link h4 text-white\"\r\n                  to=\"/\"\r\n                  style={{ marginLeft: 14 }}\r\n                >\r\n                  Contact\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <div className=\"input-group border border-dark rounded\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={this.state.summonerName}\r\n                    className=\"form-control border-0\"\r\n                    onChange={this.onChangeSearch}\r\n                    style={{ width: 400 }}\r\n                  />\r\n                  <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-light\" onClick={this.onSearch}>\r\n                      <FaSearch />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                {this.state.error !== \"\" ? (\r\n                  <p className=\"text-warning\" style={{ marginBottom: 0 }}>\r\n                    {this.state.error}\r\n                  </p>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n        <div className=\"container\" style={{ marginTop: 60, marginBottom: 60 }}>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <BasicInfo info={this.state.summonerInfo} />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              {this.state.leagueEntries && this.state.leagueEntries.length ? (\r\n                <EntriesList entries={this.state.leagueEntries} />\r\n              ) : (\r\n                <EntriesList entries={null} />\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <MatchesList\r\n              basicInfo={this.state.summonerInfo}\r\n              matches={this.state.matches}\r\n            />\r\n            <div\r\n              className=\"btn btn-dark\"\r\n              style={{ width: \"100%\" }}\r\n              onClick={this.loadMoreMatches}\r\n            >\r\n              Load more\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Moment from \"moment\";\r\nimport queues from \"../data/en_US/queues.json\";\r\n\r\nconst MatchBasicInfo = ({ summonerBasicInfo, participants, match }) => (\r\n  <div className=\"container\" style={{ marginTop: 60, marginBottom: 40 }}>\r\n    <div\r\n      className=\"shadow bg-dark card\"\r\n      style={{\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n      }}\r\n    >\r\n      <div className=\"card-body text-center\">\r\n        <div\r\n          className=\"row\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        >\r\n          <div className=\"col-md-4\">\r\n            <div\r\n              style={{\r\n                position: \"relative\",\r\n                display: \"inline-block\",\r\n              }}\r\n            >\r\n              <span\r\n                className=\"badge\"\r\n                style={{\r\n                  color: \"white\",\r\n                  position: \"absolute\",\r\n                  right: -20,\r\n                  bottom: 0,\r\n                  textAlign: \"center\",\r\n                  borderRadius: 30,\r\n                  padding: 10,\r\n                  fontSize: 16,\r\n                  background: \"#203354\",\r\n                }}\r\n              >\r\n                {summonerBasicInfo.summonerLevel}\r\n              </span>\r\n              {participants.map((p) =>\r\n                p.summonerName == summonerBasicInfo.name ? (\r\n                  p.stats.win ? (\r\n                    <img\r\n                      className=\"rounded-circle bg-primary\"\r\n                      style={{ width: 120, padding: 4 }}\r\n                      src={\r\n                        \"/img/profileicon/\" +\r\n                        summonerBasicInfo.profileIconId +\r\n                        \".png\"\r\n                      }\r\n                    />\r\n                  ) : (\r\n                    <img\r\n                      className=\"rounded-circle bg-danger\"\r\n                      style={{ width: 120, padding: 4 }}\r\n                      src={\r\n                        \"/img/profileicon/\" +\r\n                        summonerBasicInfo.profileIconId +\r\n                        \".png\"\r\n                      }\r\n                    />\r\n                  )\r\n                ) : (\r\n                  \"\"\r\n                )\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-8\" style={{ marginTop: 10 }}>\r\n            <h2 className=\"text-white card-text text-left\">\r\n              {summonerBasicInfo.name}\r\n            </h2>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-2\" style={{ padding: 10 }}>\r\n                {participants.map((p, key) =>\r\n                  p.summonerName == summonerBasicInfo.name ? (\r\n                    match.gameDuration < 300 ? (\r\n                      <p\r\n                        className=\"text-white bg-secondary\"\r\n                        style={{\r\n                          borderRadius: 30,\r\n                          padding: 10,\r\n                          fontSize: 16,\r\n                        }}\r\n                      >\r\n                        Remake\r\n                      </p>\r\n                    ) : p.stats.win ? (\r\n                      <p\r\n                        className=\"text-white bg-primary\"\r\n                        style={{\r\n                          borderRadius: 30,\r\n                          padding: 10,\r\n                          fontSize: 16,\r\n                        }}\r\n                      >\r\n                        Victory\r\n                      </p>\r\n                    ) : (\r\n                      <p\r\n                        className=\"text-white bg-danger\"\r\n                        style={{\r\n                          borderRadius: 30,\r\n                          padding: 10,\r\n                          fontSize: 16,\r\n                        }}\r\n                      >\r\n                        Defeat\r\n                      </p>\r\n                    )\r\n                  ) : (\r\n                    \"\"\r\n                  )\r\n                )}\r\n              </div>\r\n              <div className=\"col-md-10\" style={{ padding: 10 }}>\r\n                {queues.map((q, key) =>\r\n                  q.queueId == match.queueId ? (\r\n                    <p\r\n                      className=\"text-left text-secondary\"\r\n                      style={{\r\n                        color: \"white\",\r\n                        paddingTop: 10,\r\n                        fontSize: 16,\r\n                      }}\r\n                    >\r\n                      {q.description}\r\n                      <span style={{ marginLeft: 10, marginRight: 10 }}>\r\n                        &bull;\r\n                      </span>\r\n                      {(match.gameDuration / 60).toFixed(0)}:\r\n                      {match.gameDuration % 60 < 10\r\n                        ? \"0\" + (match.gameDuration % 60).toString()\r\n                        : match.gameDuration % 60}\r\n                      <span style={{ marginLeft: 10, marginRight: 10 }}>\r\n                        &bull;\r\n                      </span>\r\n                      {Moment(match.gameCreation).format(\"MM/DD/YYYY, h:mm a\")}\r\n                    </p>\r\n                  ) : (\r\n                    \"\"\r\n                  )\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default MatchBasicInfo;\r\n","import React from \"react\";\r\nimport champions from \"../data/en_US/championFull.json\";\r\n\r\nconst BanList = ({ bans }) => (\r\n  <li class=\"nav-item ml-auto\">\r\n    <div>\r\n      {bans.map((b) =>\r\n        b.pickTurn < 6 ? (\r\n          <img\r\n            className=\"rounded-circle bg-primary\"\r\n            src={\"/img/champion/\" + champions.keys[b.championId] + \".png\"}\r\n            width={30}\r\n            onError={(i) => (i.target.src = \"/img/item-background.png\")}\r\n            style={{\r\n              padding: 2,\r\n            }}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )\r\n      )}\r\n      <span\r\n        className=\"text-white text-secondary\"\r\n        style={{\r\n          marginLeft: 4,\r\n          marginRight: 4,\r\n        }}\r\n      >\r\n        Bans\r\n      </span>\r\n      {bans.map((b) =>\r\n        b.pickTurn > 5 ? (\r\n          <img\r\n            className=\"rounded-circle bg-danger\"\r\n            src={\"/img/champion/\" + champions.keys[b.championId] + \".png\"}\r\n            width={30}\r\n            onError={(i) => (i.target.src = \"/img/item-background.png\")}\r\n            style={{\r\n              padding: 2,\r\n            }}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )\r\n      )}\r\n    </div>\r\n  </li>\r\n);\r\n\r\nexport default BanList;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport champions from \"../data/en_US/championFull.json\";\r\nimport summoner from \"../data/en_US/summoner.json\";\r\nimport allRunes from \"../data/en_US/runesReforged.json\";\r\n\r\nconst ParticipantList = ({\r\n  name,\r\n  participants,\r\n  gameDuration,\r\n  largestDamageDealtToChampions,\r\n}) =>\r\n  participants.map((p, key) => (\r\n    <tr>\r\n      <td>\r\n        <div className=\"row\" style={{ height: 42 }}>\r\n          <div className=\"col-1\">\r\n            {p.summonerName == name ? (\r\n              <img\r\n                className=\"rounded-circle bg-warning\"\r\n                src={\"/img/champion/\" + champions.keys[p.championId] + \".png\"}\r\n                width={40}\r\n                style={{\r\n                  padding: 2,\r\n                }}\r\n              />\r\n            ) : p.teamId == 100 ? (\r\n              <img\r\n                className=\"rounded-circle bg-primary\"\r\n                src={\"/img/champion/\" + champions.keys[p.championId] + \".png\"}\r\n                width={40}\r\n                style={{\r\n                  padding: 2,\r\n                }}\r\n              />\r\n            ) : (\r\n              <img\r\n                className=\"rounded-circle bg-danger\"\r\n                src={\"/img/champion/\" + champions.keys[p.championId] + \".png\"}\r\n                width={40}\r\n                style={{\r\n                  padding: 2,\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"col-1\">\r\n            <div className=\"container\">\r\n              {Object.keys(summoner[\"data\"]).map((s) =>\r\n                summoner[\"data\"][s][\"key\"] == p.spell1Id ? (\r\n                  <img\r\n                    src={\"/img/spell/\" + summoner[\"data\"][s][\"image\"][\"full\"]}\r\n                    width={20}\r\n                  />\r\n                ) : (\r\n                  \"\"\r\n                )\r\n              )}\r\n              {Object.keys(summoner[\"data\"]).map((s) =>\r\n                summoner[\"data\"][s][\"key\"] == p.spell2Id ? (\r\n                  <img\r\n                    src={\"/img/spell/\" + summoner[\"data\"][s][\"image\"][\"full\"]}\r\n                    width={20}\r\n                  />\r\n                ) : (\r\n                  \"\"\r\n                )\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-1\">\r\n            <div className=\"container\">\r\n              {allRunes.map((r) =>\r\n                r[\"id\"] == p.stats.perkPrimaryStyle\r\n                  ? r[\"slots\"].map((rr) =>\r\n                      rr[\"runes\"].map((rrr) =>\r\n                        rrr[\"id\"] == p.stats.perk0 ? (\r\n                          <img src={\"/img/\" + rrr.icon} width={20} />\r\n                        ) : (\r\n                          \"\"\r\n                        )\r\n                      )\r\n                    )\r\n                  : \"\"\r\n              )}\r\n              {allRunes.map((r) =>\r\n                r[\"id\"] == p.stats.perkSubStyle ? (\r\n                  <img src={\"/img/\" + r.icon} width={16} />\r\n                ) : (\r\n                  \"\"\r\n                )\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-2 text-left\">\r\n            <Link\r\n              className=\"text-white\"\r\n              to={`/summonerdetail/${p.summonerName}`}\r\n            >\r\n              {p.summonerName}\r\n            </Link>\r\n          </div>\r\n          <div className=\"col text-left\">\r\n            <img\r\n              className=\"rounded border border-secondary\"\r\n              src={\"/img/item/\" + p.stats.item0 + \".png\"}\r\n              width={20}\r\n              onError={(i) => (i.target.src = \"/img/item-background.png\")}\r\n            />\r\n            <img\r\n              className=\"rounded border border-secondary\"\r\n              src={\"/img/item/\" + p.stats.item1 + \".png\"}\r\n              width={20}\r\n              onError={(i) => (i.target.src = \"/img/item-background.png\")}\r\n            />\r\n            <img\r\n              className=\"rounded border border-secondary\"\r\n              src={\"/img/item/\" + p.stats.item2 + \".png\"}\r\n              width={20}\r\n              onError={(i) => (i.target.src = \"/img/item-background.png\")}\r\n            />\r\n            <img\r\n              className=\"rounded border border-secondary\"\r\n              src={\"/img/item/\" + p.stats.item3 + \".png\"}\r\n              width={20}\r\n              onError={(i) => (i.target.src = \"/img/item-background.png\")}\r\n            />\r\n            <img\r\n              className=\"rounded border border-secondary\"\r\n              src={\"/img/item/\" + p.stats.item4 + \".png\"}\r\n              width={20}\r\n              onError={(i) => (i.target.src = \"/img/item-background.png\")}\r\n            />\r\n            <img\r\n              className=\"rounded border border-secondary\"\r\n              src={\"/img/item/\" + p.stats.item5 + \".png\"}\r\n              width={20}\r\n              onError={(i) => (i.target.src = \"/img/item-background.png\")}\r\n            />\r\n          </div>\r\n          <div className=\"col\">\r\n            <p style={{ margin: 0 }}>\r\n              {p.stats.kills}/{p.stats.deaths}/{p.stats.assists}\r\n            </p>\r\n            <p className=\"text-secondary\">\r\n              {p.stats.deaths > 0\r\n                ? ((p.stats.kills + p.stats.assists) / p.stats.deaths).toFixed(\r\n                    2\r\n                  )\r\n                : (p.stats.kills + p.stats.assists).toFixed(2)}\r\n            </p>\r\n          </div>\r\n          <div className=\"col\">\r\n            <p>\r\n              {p.stats.totalMinionsKilled}{\" \"}\r\n              <span className=\"text-secondary\">\r\n                ({(p.stats.totalMinionsKilled / (gameDuration / 60)).toFixed(2)}\r\n                )\r\n              </span>{\" \"}\r\n              CS\r\n            </p>\r\n          </div>\r\n          <div className=\"col\">\r\n            <p>{p.stats.totalDamageDealtToChampions.toLocaleString()} Dmg</p>\r\n            <div\r\n              class=\"progress bg-secondary\"\r\n              style={{\r\n                height: 4,\r\n              }}\r\n            >\r\n              {p.summonerName == name ? (\r\n                <div\r\n                  class=\"progress-bar bg-warning\"\r\n                  style={{\r\n                    width: `${\r\n                      (p.stats.totalDamageDealtToChampions * 100) /\r\n                      largestDamageDealtToChampions\r\n                    }%`,\r\n                  }}\r\n                ></div>\r\n              ) : p.teamId == 100 ? (\r\n                <div\r\n                  class=\"progress-bar\"\r\n                  style={{\r\n                    width: `${\r\n                      (p.stats.totalDamageDealtToChampions * 100) /\r\n                      largestDamageDealtToChampions\r\n                    }%`,\r\n                  }}\r\n                ></div>\r\n              ) : (\r\n                <div\r\n                  class=\"progress-bar bg-danger\"\r\n                  style={{\r\n                    margin: 0,\r\n                    width: `${\r\n                      (p.stats.totalDamageDealtToChampions * 100) /\r\n                      largestDamageDealtToChampions\r\n                    }%`,\r\n                  }}\r\n                ></div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\nexport default ParticipantList;\r\n","import React from \"react\";\r\nimport ParticipantList from \"./ParticipantList\";\r\n\r\nconst TeamInfo = ({\r\n  name,\r\n  teams,\r\n  participantsTeam1,\r\n  participantsTeam2,\r\n  gameDuration,\r\n  largestDamageDealtToChampions,\r\n}) =>\r\n  teams.map((t) => (\r\n    <table\r\n      className=\"card-text table table-dark table-striped small\"\r\n      style={{ marginTop: 20, marginBottom: 20 }}\r\n    >\r\n      <thead>\r\n        <tr>\r\n          <td>\r\n            <div className=\"row\" style={{ marginTop: 12 }}>\r\n              <div className=\"col\">\r\n                {t.teamId == 100 ? (\r\n                  <h6 className=\"text-primary strong\">Team 1</h6>\r\n                ) : (\r\n                  <h6 className=\"text-danger strong\">Team 2</h6>\r\n                )}\r\n              </div>\r\n              <div className=\"col\">\r\n                <p>\r\n                  {t.totalKills}/{t.totalDeaths}/{t.totalAssists}\r\n                </p>\r\n              </div>\r\n              <div className=\"col\">\r\n                <img src={\"/img/turret-icon.png\"} width={14} />\r\n                <span style={{ marginLeft: 10 }}>{t.towerKills}</span>\r\n              </div>\r\n              <div className=\"col\">\r\n                <img src={\"/img/inhibitor-icon.png\"} width={20} />\r\n                <span style={{ marginLeft: 10 }}>{t.inhibitorKills}</span>\r\n              </div>\r\n              <div className=\"col\">\r\n                <img src={\"/img/dragon-icon.png\"} width={20} />\r\n                <span style={{ marginLeft: 10 }}>{t.dragonKills}</span>\r\n              </div>\r\n              <div className=\"col\">\r\n                <img src={\"/img/rift-herald-icon.png\"} width={20} />\r\n                <span style={{ marginLeft: 10 }}>{t.riftHeraldKills}</span>\r\n              </div>\r\n              <div className=\"col\">\r\n                <img src={\"/img/baron-icon.png\"} width={20} />\r\n                <span style={{ marginLeft: 10 }}>{t.baronKills}</span>\r\n              </div>\r\n              <div className=\"col\">\r\n                <img src={\"/img/gold-icon.png\"} width={20} />\r\n                <span style={{ marginLeft: 10 }}>\r\n                  {t.totalGoldEarned.toLocaleString()}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {t.teamId == 100 ? (\r\n          <ParticipantList\r\n            name={name}\r\n            participants={participantsTeam1}\r\n            gameDuration={gameDuration}\r\n            largestDamageDealtToChampions={largestDamageDealtToChampions}\r\n          />\r\n        ) : (\r\n          <ParticipantList\r\n            name={name}\r\n            participants={participantsTeam2}\r\n            gameDuration={gameDuration}\r\n            largestDamageDealtToChampions={largestDamageDealtToChampions}\r\n          />\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  ));\r\n\r\nexport default TeamInfo;\r\n","import React from \"react\";\r\nimport champions from \"../data/en_US/championFull.json\";\r\n\r\nconst AdvancedStats = ({\r\n  name,\r\n  teams,\r\n  participantsTeam1,\r\n  participantsTeam2,\r\n}) => (\r\n  <table\r\n    className=\"card-text table table-dark table-striped small\"\r\n    style={{ marginTop: 20, marginBottom: 20 }}\r\n  >\r\n    <thead>\r\n      <tr>\r\n        <th className=\"text-left\">Combat</th>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <img\r\n                className=\"rounded-circle bg-warning\"\r\n                src={\"/img/champion/\" + champions.keys[p.championId] + \".png\"}\r\n                width={40}\r\n                style={{\r\n                  padding: 2,\r\n                }}\r\n              />\r\n            ) : (\r\n              <img\r\n                className=\"rounded-circle bg-primary\"\r\n                src={\"/img/champion/\" + champions.keys[p.championId] + \".png\"}\r\n                width={40}\r\n                style={{\r\n                  padding: 2,\r\n                }}\r\n              />\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <img\r\n                className=\"rounded-circle bg-warning\"\r\n                src={\"/img/champion/\" + champions.keys[p.championId] + \".png\"}\r\n                width={40}\r\n                style={{\r\n                  padding: 2,\r\n                }}\r\n              />\r\n            ) : (\r\n              <img\r\n                className=\"rounded-circle bg-danger\"\r\n                src={\"/img/champion/\" + champions.keys[p.championId] + \".png\"}\r\n                width={40}\r\n                style={{\r\n                  padding: 2,\r\n                }}\r\n              />\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td className=\"text-left\">KDA</td>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.kills}/{p.stats.deaths}/{p.stats.assists}\r\n              </p>\r\n            ) : (\r\n              <p>\r\n                {p.stats.kills}/{p.stats.deaths}/{p.stats.assists}\r\n              </p>\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.kills}/{p.stats.deaths}/{p.stats.assists}\r\n              </p>\r\n            ) : (\r\n              <p>\r\n                {p.stats.kills}/{p.stats.deaths}/{p.stats.assists}\r\n              </p>\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n      <tr>\r\n        <td className=\"text-left\">Largest Killing Spree</td>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">{p.stats.largestKillingSpree}</p>\r\n            ) : (\r\n              <p>{p.stats.largestKillingSpree}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">{p.stats.largestKillingSpree}</p>\r\n            ) : (\r\n              <p>{p.stats.largestKillingSpree}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n      <tr>\r\n        <td className=\"text-left\">Largest Multi Kill</td>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">{p.stats.largestMultiKill}</p>\r\n            ) : (\r\n              <p>{p.stats.largestMultiKill}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">{p.stats.largestMultiKill}</p>\r\n            ) : (\r\n              <p>{p.stats.largestMultiKill}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n      <tr>\r\n        <td className=\"text-left\">First Blood Kill</td>\r\n        <td>a</td>\r\n        <td>a</td>\r\n        <td>a</td>\r\n        <td>a</td>\r\n        <td>a</td>\r\n        <td>a</td>\r\n        <td>a</td>\r\n        <td>a</td>\r\n        <td>a</td>\r\n        <td>a</td>\r\n      </tr>\r\n    </tbody>\r\n    <thead>\r\n      <tr>\r\n        <th className=\"text-left\">Damage Dealt</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td className=\"text-left\">Total Dmg To Champions</td>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.totalDamageDealtToChampions.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.totalDamageDealtToChampions.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.totalDamageDealtToChampions.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.totalDamageDealtToChampions.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n      <tr>\r\n        <td className=\"text-left\">Physical Dmg To Champions</td>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.physicalDamageDealtToChampions.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.physicalDamageDealtToChampions.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.physicalDamageDealtToChampions.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.physicalDamageDealtToChampions.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n      <tr>\r\n        <td className=\"text-left\">Magic Dmg To Champions</td>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.magicDamageDealtToChampions.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.magicDamageDealtToChampions.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.magicDamageDealtToChampions.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.magicDamageDealtToChampions.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n      <tr>\r\n        <td className=\"text-left\">True Dmg To Champions</td>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.trueDamageDealtToChampions.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.trueDamageDealtToChampions.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.trueDamageDealtToChampions.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.trueDamageDealtToChampions.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n      <tr>\r\n        <td className=\"text-left\">Total Dmg</td>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.totalDamageDealt.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.totalDamageDealt.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.totalDamageDealt.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.totalDamageDealt.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n      <tr>\r\n        <td className=\"text-left\">Physical Dmg</td>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.physicalDamageDealt.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.physicalDamageDealt.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.physicalDamageDealt.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.physicalDamageDealt.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n      <tr>\r\n        <td className=\"text-left\">Magic Dmg</td>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.magicDamageDealt.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.magicDamageDealt.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.magicDamageDealt.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.magicDamageDealt.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n      <tr>\r\n        <td className=\"text-left\">True Dmg</td>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.trueDamageDealt.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.trueDamageDealt.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.trueDamageDealt.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.trueDamageDealt.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n      <tr>\r\n        <td className=\"text-left\">Largest Critical Strike</td>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.largestCriticalStrike.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.largestCriticalStrike.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.largestCriticalStrike.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.largestCriticalStrike.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n      <tr>\r\n        <td className=\"text-left\">Total Dmg To Objectives</td>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.damageDealtToObjectives.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.damageDealtToObjectives.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.damageDealtToObjectives.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.damageDealtToObjectives.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n      <tr>\r\n        <td className=\"text-left\">Total Dmg To Turrets</td>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.damageDealtToTurrets.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.damageDealtToTurrets.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.damageDealtToTurrets.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.damageDealtToTurrets.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n    </tbody>\r\n    <thead>\r\n      <tr>\r\n        <th className=\"text-left\">Defensive Damage</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td className=\"text-left\">Dmg Healed</td>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.totalHeal.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.totalHeal.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.totalHeal.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.totalHeal.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n      <tr>\r\n        <td className=\"text-left\">Dmg Taken</td>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.totalDamageTaken.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.totalDamageTaken.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.totalDamageTaken.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.totalDamageTaken.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n      <tr>\r\n        <td className=\"text-left\">Physical Dmg Taken</td>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.physicalDamageTaken.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.physicalDamageTaken.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.physicalDamageTaken.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.physicalDamageTaken.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n      <tr>\r\n        <td className=\"text-left\">Magic Dmg Taken</td>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.magicalDamageTaken.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.magicalDamageTaken.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.magicalDamageTaken.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.magicalDamageTaken.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n      <tr>\r\n        <td className=\"text-left\">True Dmg Taken</td>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.trueDamageTaken.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.trueDamageTaken.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.trueDamageTaken.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.trueDamageTaken.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n      <tr>\r\n        <td className=\"text-left\">Self Mitigated Dmg</td>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.damageSelfMitigated.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.damageSelfMitigated.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.damageSelfMitigated.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.damageSelfMitigated.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n    </tbody>\r\n    <thead>\r\n      <tr>\r\n        <th className=\"text-left\">Vision</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td className=\"text-left\">Vision Score</td>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">{p.stats.visionScore}</p>\r\n            ) : (\r\n              <p>{p.stats.visionScore}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">{p.stats.visionScore}</p>\r\n            ) : (\r\n              <p>{p.stats.visionScore}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n      <tr>\r\n        <td className=\"text-left\">Wards Placed</td>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">{p.stats.wardsPlaced}</p>\r\n            ) : (\r\n              <p>{p.stats.wardsPlaced}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">{p.stats.wardsPlaced}</p>\r\n            ) : (\r\n              <p>{p.stats.wardsPlaced}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n      <tr>\r\n        <td className=\"text-left\">Wards Destroyed</td>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">{p.stats.wardsKilled}</p>\r\n            ) : (\r\n              <p>{p.stats.wardsKilled}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">{p.stats.wardsKilled}</p>\r\n            ) : (\r\n              <p>{p.stats.wardsKilled}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n      <tr>\r\n        <td className=\"text-left\">Control Wards Purchased</td>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">{p.stats.visionWardsBoughtInGame}</p>\r\n            ) : (\r\n              <p>{p.stats.visionWardsBoughtInGame}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">{p.stats.visionWardsBoughtInGame}</p>\r\n            ) : (\r\n              <p>{p.stats.visionWardsBoughtInGame}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n    </tbody>\r\n    <thead>\r\n      <tr>\r\n        <th className=\"text-left\">Income</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td className=\"text-left\">Gold Earned</td>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.goldEarned.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.goldEarned.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.goldEarned.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.goldEarned.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n      <tr>\r\n        <td className=\"text-left\">Gold Spent</td>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.goldSpent.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.goldSpent.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.goldSpent.toLocaleString()}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.goldSpent.toLocaleString()}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n      <tr>\r\n        <td className=\"text-left\">Minions Killed</td>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">{p.stats.totalMinionsKilled}</p>\r\n            ) : (\r\n              <p>{p.stats.totalMinionsKilled}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">{p.stats.totalMinionsKilled}</p>\r\n            ) : (\r\n              <p>{p.stats.totalMinionsKilled}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n      <tr>\r\n        <td className=\"text-left\">Neutral Minions Killed (NMK)</td>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">{p.stats.neutralMinionsKilled}</p>\r\n            ) : (\r\n              <p>{p.stats.neutralMinionsKilled}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">{p.stats.neutralMinionsKilled}</p>\r\n            ) : (\r\n              <p>{p.stats.neutralMinionsKilled}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n      <tr>\r\n        <td className=\"text-left\">NMK in Team Jng</td>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.neutralMinionsKilledTeamJungle}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.neutralMinionsKilledTeamJungle}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.neutralMinionsKilledTeamJungle}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.neutralMinionsKilledTeamJungle}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n      <tr>\r\n        <td className=\"text-left\">NMK in Enemy Jng</td>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.neutralMinionsKilledEnemyJungle}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.neutralMinionsKilledEnemyJungle}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">\r\n                {p.stats.neutralMinionsKilledEnemyJungle}\r\n              </p>\r\n            ) : (\r\n              <p>{p.stats.neutralMinionsKilledEnemyJungle}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n    </tbody>\r\n    <thead>\r\n      <tr>\r\n        <th className=\"text-left\">Objectives</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td className=\"text-left\">Towers Destroyed</td>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">{p.stats.turretKills}</p>\r\n            ) : (\r\n              <p>{p.stats.turretKills}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">{p.stats.turretKills}</p>\r\n            ) : (\r\n              <p>{p.stats.turretKills}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n      <tr>\r\n        <td className=\"text-left\">Inhibitors Destroyed</td>\r\n        {participantsTeam1.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">{p.stats.inhibitorKills}</p>\r\n            ) : (\r\n              <p>{p.stats.inhibitorKills}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n        {participantsTeam2.map((p) => (\r\n          <th>\r\n            {p.summonerName == name ? (\r\n              <p className=\"text-warning\">{p.stats.inhibitorKills}</p>\r\n            ) : (\r\n              <p>{p.stats.inhibitorKills}</p>\r\n            )}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n);\r\nexport default AdvancedStats;\r\n","import React from \"react\";\r\nimport BanList from \"./BanList\";\r\nimport Overview from \"./Overview\";\r\nimport AdvancedStats from \"./AdvancedStats\";\r\n\r\nconst MatchDetail = ({\r\n  bans,\r\n  summonerBasicInfo,\r\n  teams,\r\n  match,\r\n  participantsTeam1,\r\n  participantsTeam2,\r\n}) => (\r\n  <div\r\n    className=\"shadow bg-dark card\"\r\n    style={{\r\n      marginTop: 10,\r\n      marginBottom: 10,\r\n    }}\r\n  >\r\n    <div className=\"card-body text-center\">\r\n      <ul class=\"nav nav-tabs border-0\" role=\"tablist\">\r\n        <li class=\"nav-item \">\r\n          <a\r\n            class=\"nav-link active text-light bg-dark border-top-0 border-left-0 border-right-0\"\r\n            data-toggle=\"tab\"\r\n            href=\"#overview\"\r\n          >\r\n            Overview\r\n          </a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a\r\n            class=\"nav-link text-light bg-dark border-top-0 border-left-0 border-right-0\"\r\n            data-toggle=\"tab\"\r\n            href=\"#advancedstats\"\r\n          >\r\n            Advanced Stats\r\n          </a>\r\n        </li>\r\n        {/* <li class=\"nav-item\">\r\n          <a\r\n            class=\"nav-link text-light bg-dark border-top-0 border-left-0 border-right-0\"\r\n            data-toggle=\"tab\"\r\n            href=\"#goldgraph\"\r\n          >\r\n            Gold Graph\r\n          </a>\r\n        </li> */}\r\n        <BanList bans={bans} />\r\n      </ul>\r\n      <div class=\"tab-content\">\r\n        <div id=\"overview\" class=\"container tab-pane active\">\r\n          <Overview\r\n            name={summonerBasicInfo.name}\r\n            teams={teams}\r\n            largestDamageDealtToChampions={match.largestDamageDealtToChampions}\r\n            gameDuration={match.gameDuration}\r\n            participantsTeam1={participantsTeam1}\r\n            participantsTeam2={participantsTeam2}\r\n          />\r\n        </div>\r\n        <div id=\"advancedstats\" class=\"container tab-pane fade\">\r\n          <AdvancedStats\r\n            name={summonerBasicInfo.name}\r\n            participantsTeam1={participantsTeam1}\r\n            participantsTeam2={participantsTeam2}\r\n          />\r\n        </div>\r\n        {/* <div id=\"goldgraph\" class=\"container tab-pane fade\">\r\n          <br></br>\r\n          <h3>Gold Graph</h3>\r\n          <p>\r\n            Sed ut perspiciatis unde omnis iste natus error sit voluptatem\r\n            accusantium doloremque laudantium, totam rem aperiam.\r\n          </p>\r\n        </div> */}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default MatchDetail;\r\n","import React, { Component } from \"react\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MatchBasicInfo from \"../components/MatchBasicInfo\";\r\nimport MatchDetail from \"../components/MatchDetail\";\r\n\r\nexport class MatchDetailPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangeSearch = this.onChangeSearch.bind(this);\r\n    this.onSearch = this.onSearch.bind(this);\r\n\r\n    this.state = {\r\n      summonerName: \"\",\r\n      summonerBasicInfo: [],\r\n      match: [],\r\n      teams: [],\r\n      participants: [],\r\n      participantsTeam1: [],\r\n      participantsTeam2: [],\r\n      bans: [],\r\n      error: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { params } = this.props.match;\r\n    this.setState({\r\n      name: params.name,\r\n      matchId: params.matchId,\r\n    });\r\n\r\n    fetch(\r\n      `https://localhost:44355/api/summoners/by-name/${params.name}?index=10`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        this.setState({\r\n          summonerBasicInfo: result,\r\n        });\r\n      });\r\n\r\n    fetch(`https://localhost:44303/api/matches/${params.matchId}`)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        this.setState({\r\n          match: result,\r\n          teams: result.teams,\r\n          bans: result.bans,\r\n          participants: result.participants,\r\n          participantsTeam1: result.participants.filter((p) => p.teamId == 100),\r\n          participantsTeam2: result.participants.filter((p) => p.teamId == 200),\r\n        });\r\n      });\r\n  }\r\n\r\n  onChangeSearch(e) {\r\n    this.setState({\r\n      summonerName: e.target.value,\r\n    });\r\n  }\r\n\r\n  onSearch() {\r\n    const { history } = this.props;\r\n\r\n    if (this.state.summonerName !== \"\") {\r\n      fetch(\r\n        `https://localhost:44355/api/summoners/verify-by-name/${this.state.summonerName}`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          if (result === true) {\r\n            history.push(`/summonerdetail/${this.state.summonerName}`);\r\n          } else {\r\n            this.setState({\r\n              error: \"Summoner name does not match any record!\",\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      this.setState({\r\n        error: \"Please enter a summoner name!\",\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <nav className=\"navbar navbar-expand-md bg-dark navbar-dark\">\r\n            <Link className=\"nav-brand border-right border-secondary\" to=\"/\">\r\n              <img\r\n                style={{ marginRight: 14, width: 80 }}\r\n                src={\"/shurima_logo.png\"}\r\n                alt=\"\"\r\n              />\r\n            </Link>\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link h4 text-white\"\r\n                  to=\"/\"\r\n                  style={{ marginLeft: 14 }}\r\n                >\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link h4 text-white\"\r\n                  to=\"/\"\r\n                  style={{ marginLeft: 14 }}\r\n                >\r\n                  About\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link h4 text-white\"\r\n                  to=\"/\"\r\n                  style={{ marginLeft: 14 }}\r\n                >\r\n                  Contact\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <div className=\"input-group border border-dark rounded\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={this.state.summonerName}\r\n                    className=\"form-control border-0\"\r\n                    onChange={this.onChangeSearch}\r\n                    style={{ width: 400 }}\r\n                  />\r\n                  <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-light\" onClick={this.onSearch}>\r\n                      <FaSearch />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                {this.state.error !== \"\" ? (\r\n                  <p className=\"text-warning\" style={{ marginBottom: 0 }}>\r\n                    {this.state.error}\r\n                  </p>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n        <div className=\"container\" style={{ marginTop: 60, marginBottom: 40 }}>\r\n          <MatchBasicInfo\r\n            match={this.state.match}\r\n            participants={this.state.participants}\r\n            summonerBasicInfo={this.state.summonerBasicInfo}\r\n          />\r\n          <MatchDetail\r\n            summonerBasicInfo={this.state.summonerBasicInfo}\r\n            match={this.state.match}\r\n            bans={this.state.bans}\r\n            teams={this.state.teams}\r\n            participantsTeam1={this.state.participantsTeam1}\r\n            participantsTeam2={this.state.participantsTeam2}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nconst NotFoundPage = () => <h1>404: Page Not Found</h1>;\r\n\r\nexport default NotFoundPage;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { HomePage } from \"./pages/HomePage\";\nimport { SummonerPage } from \"./pages/SummonerPage\";\nimport { MatchDetailPage } from \"./pages/MatchDetailPage\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <div id=\"page-body\">\n          <Switch>\n            <Route path=\"/\" component={HomePage} exact />\n            <Route path=\"/summonerdetail/:name/\" component={SummonerPage} />\n            <Route\n              path=\"/matchdetail/:name/:matchId\"\n              component={MatchDetailPage}\n            />\n            <Route component={NotFoundPage} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"jquery/dist/jquery.min.js\";\nimport \"popper.js/dist/umd/popper.min.js\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}